name: Rust Static Build

on:
  push:
    branches: [ "master" ]
    tags:
      - 'v*'
  pull_request:
    branches: [ "master" ]

env:
  BINARY_NAME: perfembd

jobs:
  build-linux:
    name: Build Linux
    strategy:
      matrix:
        target: [x86_64-unknown-linux-musl, aarch64-unknown-linux-musl]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Setup Rust
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        target: ${{ matrix.target }}

    - name: Setup Zig
      run: |
        sudo snap install zig --classic --beta
        cargo install cargo-zigbuild

    - name: Build
      id: build
      run: |
        target="${{ matrix.target }}"
        cargo zigbuild --release --target "$target"
        name="${{ env.BINARY_NAME }}-${target%%-*}-linux"
        cp "target/${target}/release/${{ env.BINARY_NAME }}" "$name"
        gzip -9 "$name"
        echo "asset_name=$name.gz" >> $GITHUB_OUTPUT

    - name: Upload
      uses: actions/upload-artifact@v4
      with:
        name: binary-asset-${{ matrix.target }}
        path: ${{ steps.build.outputs.asset_name }}

  build-macos:
    name: Build macOS
    strategy:
      matrix:
        target: [x86_64-apple-darwin, aarch64-apple-darwin]
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4

    - name: Setup Rust
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        target: ${{ matrix.target }}

    - name: Build
      id: build
      run: |
        target="${{ matrix.target }}"
        cargo build --release --target "$target"
        name="${{ env.BINARY_NAME }}-${target%%-*}-macos"
        cp "target/${target}/release/${{ env.BINARY_NAME }}" "$name"
        gzip -9 "$name"
        echo "asset_name=$name.gz" >> $GITHUB_OUTPUT

    - name: Upload
      uses: actions/upload-artifact@v4
      with:
        name: binary-asset-${{ matrix.target }}
        path: ${{ steps.build.outputs.asset_name }}

  release:
    name: Create GitHub Release
    needs: [build-linux, build-macos]
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: release-assets

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_VERSION: ${{ github.ref_name }}
        run: |
          gh release create "$RELEASE_VERSION" release-assets/*/*.gz \
             --title "${{ env.BINARY_NAME }} ${RELEASE_VERSION#v}" \
             --notes "Release based on tag ${RELEASE_VERSION}"
